// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationConsoleEntity;

namespace WebApplicationConsoleEntity.Migrations
{
    [DbContext(typeof(FreelancerDbContext))]
    [Migration("20210114135442_FreelancerDb")]
    partial class FreelancerDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("JobId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Customercat", b =>
                {
                    b.Property<int>("CustomercatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customercat_id")
                        .UseIdentityColumn();

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomercatDescription")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomercatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomercatId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Customercats");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("job_id")
                        .UseIdentityColumn();

                    b.Property<string>("JobDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("JobEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JobStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobState")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("QuoteId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quote_id")
                        .UseIdentityColumn();

                    b.Property<int>("QuoteAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuoteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuoteFinalAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuoteFinalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuoteState")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("QuoteId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Customer", b =>
                {
                    b.HasOne("WebApplicationConsoleEntity.Models.Job", null)
                        .WithMany("Customers")
                        .HasForeignKey("JobId");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Customercat", b =>
                {
                    b.HasOne("WebApplicationConsoleEntity.Models.Customer", null)
                        .WithMany("Customercats")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Job", b =>
                {
                    b.HasOne("WebApplicationConsoleEntity.Models.Quote", null)
                        .WithMany("Jobs")
                        .HasForeignKey("QuoteId");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Customer", b =>
                {
                    b.Navigation("Customercats");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Job", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("WebApplicationConsoleEntity.Models.Quote", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
